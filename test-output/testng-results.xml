<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="3" passed="2">
  <reporter-output>
    <line>
      <![CDATA[Home page is Displayed]]>
    </line>
    <line>
      <![CDATA[testValidLogin is PASSED]]>
    </line>
    <line>
      <![CDATA[testInvalidLogin is PASSED]]>
    </line>
    <line>
      <![CDATA[testProductVerson is FAILED]]>
    </line>
  </reporter-output>
  <suite name="Suite" duration-ms="124431" started-at="2019-08-11T03:48:06Z" finished-at="2019-08-11T03:50:10Z">
    <groups>
      <group name="smoke">
        <method signature="ValidLogin_Test.testValidLogin()[pri:1, instance:script.ValidLogin_Test@4c70fda8]" name="testValidLogin" class="script.ValidLogin_Test"/>
        <method signature="VerifyProductVersion_Test.testProductVerson()[pri:3, instance:script.VerifyProductVersion_Test@224edc67]" name="testProductVerson" class="script.VerifyProductVersion_Test"/>
      </group> <!-- smoke -->
      <group name="login">
        <method signature="InvalidLogin_Test.testInvalidLogin()[pri:2, instance:script.InvalidLogin_Test@14acaea5]" name="testInvalidLogin" class="script.InvalidLogin_Test"/>
        <method signature="ValidLogin_Test.testValidLogin()[pri:1, instance:script.ValidLogin_Test@4c70fda8]" name="testValidLogin" class="script.ValidLogin_Test"/>
      </group> <!-- login -->
    </groups>
    <test name="Test" duration-ms="124431" started-at="2019-08-11T03:48:06Z" finished-at="2019-08-11T03:50:10Z">
      <class name="script.InvalidLogin_Test">
        <test-method status="PASS" signature="openApp()[pri:0, instance:script.InvalidLogin_Test@14acaea5]" name="openApp" is-config="true" duration-ms="33236" started-at="2019-08-11T09:18:44Z" finished-at="2019-08-11T09:19:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method status="PASS" signature="testInvalidLogin()[pri:2, instance:script.InvalidLogin_Test@14acaea5]" name="testInvalidLogin" duration-ms="17937" started-at="2019-08-11T09:19:18Z" finished-at="2019-08-11T09:19:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidLogin -->
        <test-method status="PASS" signature="closeApp(org.testng.ITestResult)[pri:0, instance:script.InvalidLogin_Test@14acaea5]" name="closeApp" is-config="true" duration-ms="687" started-at="2019-08-11T09:19:35Z" finished-at="2019-08-11T09:19:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testInvalidLogin status=SUCCESS method=InvalidLogin_Test.testInvalidLogin()[pri:2, instance:script.InvalidLogin_Test@14acaea5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[testInvalidLogin is PASSED]]>
            </line>
          </reporter-output>
        </test-method> <!-- closeApp -->
      </class> <!-- script.InvalidLogin_Test -->
      <class name="script.VerifyProductVersion_Test">
        <test-method status="PASS" signature="openApp()[pri:0, instance:script.VerifyProductVersion_Test@224edc67]" name="openApp" is-config="true" duration-ms="26079" started-at="2019-08-11T09:19:36Z" finished-at="2019-08-11T09:20:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method status="FAIL" signature="testProductVerson()[pri:3, instance:script.VerifyProductVersion_Test@224edc67]" name="testProductVerson" duration-ms="6726" started-at="2019-08-11T09:20:02Z" finished-at="2019-08-11T09:20:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [actiTIME 2017.4] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [actiTIME 2017.4] but found []
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at org.testng.Assert.assertEquals(Assert.java:189)
	at org.testng.Assert.assertEquals(Assert.java:199)
	at page.EnterPage.verifyProductVersion(EnterPage.java:40)
	at script.VerifyProductVersion_Test.testProductVerson(VerifyProductVersion_Test.java:31)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProductVerson -->
        <test-method status="PASS" signature="closeApp(org.testng.ITestResult)[pri:0, instance:script.VerifyProductVersion_Test@224edc67]" name="closeApp" is-config="true" duration-ms="1167" started-at="2019-08-11T09:20:09Z" finished-at="2019-08-11T09:20:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testProductVerson status=FAILURE method=VerifyProductVersion_Test.testProductVerson()[pri:3, instance:script.VerifyProductVersion_Test@224edc67] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[testProductVerson is FAILED]]>
            </line>
          </reporter-output>
        </test-method> <!-- closeApp -->
      </class> <!-- script.VerifyProductVersion_Test -->
      <class name="script.ValidLogin_Test">
        <test-method status="PASS" signature="openApp()[pri:0, instance:script.ValidLogin_Test@4c70fda8]" name="openApp" is-config="true" duration-ms="29732" started-at="2019-08-11T09:18:06Z" finished-at="2019-08-11T09:18:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method status="PASS" signature="testValidLogin()[pri:1, instance:script.ValidLogin_Test@4c70fda8]" name="testValidLogin" duration-ms="8013" started-at="2019-08-11T09:18:36Z" finished-at="2019-08-11T09:18:44Z">
          <reporter-output>
            <line>
              <![CDATA[Home page is Displayed]]>
            </line>
          </reporter-output>
        </test-method> <!-- testValidLogin -->
        <test-method status="PASS" signature="closeApp(org.testng.ITestResult)[pri:0, instance:script.ValidLogin_Test@4c70fda8]" name="closeApp" is-config="true" duration-ms="766" started-at="2019-08-11T09:18:44Z" finished-at="2019-08-11T09:18:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testValidLogin status=SUCCESS method=ValidLogin_Test.testValidLogin()[pri:1, instance:script.ValidLogin_Test@4c70fda8] output=Home page is Displayed]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[testValidLogin is PASSED]]>
            </line>
          </reporter-output>
        </test-method> <!-- closeApp -->
      </class> <!-- script.ValidLogin_Test -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
